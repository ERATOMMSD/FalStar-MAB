#!/bin/sh
csv=$1
matlab -nodesktop -nosplash <<EOF
clear;
addpath(genpath('.'));
InitBreach;

mdl = 'Autotrans_shift';
Br = MyBreachSimulinkSystem(mdl);
Br.Sys.tspan = 0:.01:30;
phi_type = 'or';
phi_str = 'alw_[0,30]((not (gear[t] == 4)) or RPM[t]> 700)';
phi = STL_Formula('phi1',phi_str);
budget = 60;
budget_unit = 3;
scalar = 0.2;
algorithm = 'UCB1';

input_gen.type = 'UniStep';
input_gen.cp = 5;
Br.SetInputGen(input_gen);
for cpi = 0:input_gen.cp-1
	throttle_sig = strcat('throttle_u', num2str(cpi));
	Br.SetParamRanges({throttle_sig},[0.0 100.0]);
	brake_sig = strcat('brake_u', num2str(cpi));
	Br.SetParamRanges({brake_sig},[0.0 325.0]);
end
total_time = [];
falsified = [];
numsim = [];
trials = 3;
for i = 1: trials
	 tic
	 fp = UCB1Falsification_2(Br, phi, budget, budget_unit, scalar, phi_type);
	 fp.solve();
	 tt = toc;
	 falsified = [falsified;fp.falsified];
	 total_time = [total_time; tt];
	 numsim = [numsim; fp.num_sim];
end
phi_strset = {phi_str;phi_str;phi_str};
algorithmset = {algorithm;algorithm;algorithm};
specID = {property[0];property[0];property[0]};
scalarset = scalar*ones(trials, 1);
budgetset = budget*ones(trials, 1);
budget_unitset = budget_unit*ones(trials, 1);
result = table(specID, phi_strset, algorithmset, scalarset, budgetset, budget_unitset, falsified, total_time, numsim);
writetable(result, '$csv', 'Delimiter', ';');
quit
EOF
